{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN8npTLIR3xw+lA+7AkN7lr"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## Summary\n","This lesson introduced another statistical test: ANOVA.  ANOVAs are appropriate for comparing a numeric features when more than two groups are involved.  The assumption should be checked before running the test.  With ANOVA, the test itself determines whether or not there is ANY group statistically different than another.  If you get a significant result, you must then perform a second pairwise test to determine which groups are significantly different than another."],"metadata":{"id":"NY55NBHpdNWA"}},{"cell_type":"markdown","source":["# Question: Do different diets result in different amounts of weight loss?"],"metadata":{"id":"54eQjJFZb8Lt"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"WOsM-15Yby6I","executionInfo":{"status":"ok","timestamp":1683902935177,"user_tz":240,"elapsed":2063,"user":{"displayName":"Luz Dobbins","userId":"15497251191654654554"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import scipy.stats as stats"]},{"cell_type":"code","source":["url = 'https://docs.google.com/spreadsheets/d/1DW-2yHUm0YhH01r_kNp9ir5CaAlo9s48dhpIx-6J-TM/gviz/tq?tqx=out:csv&sheet=Diets'\n","df = pd.read_csv(url)\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"xt7o_0fLb490","executionInfo":{"status":"ok","timestamp":1683902959776,"user_tz":240,"elapsed":704,"user":{"displayName":"Luz Dobbins","userId":"15497251191654654554"}},"outputId":"f17b2d84-a731-47ae-f448-1323411a3121"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   gender  Age  Height  pre.weight  Diet  weight6weeks  kg_lost\n","0       0   22     159          58     1          54.2      3.8\n","1       0   46     192          60     1          54.0      6.0\n","2       0   55     170          64     1          63.3      0.7\n","3       0   33     171          64     1          61.1      2.9\n","4       0   50     170          65     1          62.2      2.8"],"text/html":["\n","  <div id=\"df-e83ee014-5748-4b41-934f-e302166a3d52\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>Age</th>\n","      <th>Height</th>\n","      <th>pre.weight</th>\n","      <th>Diet</th>\n","      <th>weight6weeks</th>\n","      <th>kg_lost</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>22</td>\n","      <td>159</td>\n","      <td>58</td>\n","      <td>1</td>\n","      <td>54.2</td>\n","      <td>3.8</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>46</td>\n","      <td>192</td>\n","      <td>60</td>\n","      <td>1</td>\n","      <td>54.0</td>\n","      <td>6.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>55</td>\n","      <td>170</td>\n","      <td>64</td>\n","      <td>1</td>\n","      <td>63.3</td>\n","      <td>0.7</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>33</td>\n","      <td>171</td>\n","      <td>64</td>\n","      <td>1</td>\n","      <td>61.1</td>\n","      <td>2.9</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>170</td>\n","      <td>65</td>\n","      <td>1</td>\n","      <td>62.2</td>\n","      <td>2.8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e83ee014-5748-4b41-934f-e302166a3d52')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e83ee014-5748-4b41-934f-e302166a3d52 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e83ee014-5748-4b41-934f-e302166a3d52');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["sns.barplot(data=df, x='Diet',y='kg_lost');"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"7w1HDR32cAvG","executionInfo":{"status":"ok","timestamp":1683902968646,"user_tz":240,"elapsed":1414,"user":{"displayName":"Luz Dobbins","userId":"15497251191654654554"}},"outputId":"065f49dc-0d57-42a6-a63f-bfb8794698e1"},"execution_count":3,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## Hypothesis\n","\n","Null Hypothesis:  Different diets all have the same results. (the kg_lost is not significantly different between diets)\n","\n","Alternative Hypothesis: Different diets have different results. (the kg_lost is significantly different between diets)\n","\n","Using an alpha=.05\n","\n","Note that our hypothesis do NOT specify which groups are different, just that there is or isn't a difference when taking all three into consideration.\n","\n","## Separating Our Groups\n","Since we will need to analyze each group separately, it is in our best interest to use a dictionary with the group names (diet number in this case) as the keys and the column for kg_lost as the values."],"metadata":{"id":"xB-D-v6gcHvv"}},{"cell_type":"code","source":["## Create groups dictionary. There are only 3 groups, but this is even more helpful when there are many groups\n","groups = {}\n","## Loop through all unique categories\n","for i in df['Diet'].unique():\n","    ## Get series for group and rename\n","    data = df.loc[df['Diet']==i,'kg_lost'].copy()\n","    \n","    # save into the dictionary\n","    groups[i] = data\n","groups.keys()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gR88M2yjcHiY","executionInfo":{"status":"ok","timestamp":1683903007935,"user_tz":240,"elapsed":338,"user":{"displayName":"Luz Dobbins","userId":"15497251191654654554"}},"outputId":"e26b99ba-33dd-4670-fe1b-fb0f6fa0351a"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dict_keys([1, 2, 3])"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["## Testing Assumptions\n","\n","\n","Assumption of Normality"],"metadata":{"id":"hYteGfWicOpk"}},{"cell_type":"code","source":["## Running normal test on each group and confirming there are >20 in each group\n","norm_results = {}\n","for i, data in groups.items():\n","    stat, p = stats.normaltest(data)\n","    ## save the p val, test statistic, and the size of the group\n","    norm_results[i] = {'n': len(data),\n","                             'p':p,\n","                             'test stat':stat,}\n","## convert to a dataframe\n","norm_results_df = pd.DataFrame(norm_results).T\n","norm_results_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"0I3A5DWDcCjM","executionInfo":{"status":"ok","timestamp":1683903028154,"user_tz":240,"elapsed":9,"user":{"displayName":"Luz Dobbins","userId":"15497251191654654554"}},"outputId":"ce8ba840-51e7-42a3-b045-b33f75fa84b7"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      n         p  test stat\n","1  26.0  0.216027   3.064706\n","2  27.0  0.841993   0.343967\n","3  27.0  0.463144   1.539436"],"text/html":["\n","  <div id=\"df-8b580ab1-52bf-4ad1-83fb-e8731f9c2f0e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>n</th>\n","      <th>p</th>\n","      <th>test stat</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>26.0</td>\n","      <td>0.216027</td>\n","      <td>3.064706</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>27.0</td>\n","      <td>0.841993</td>\n","      <td>0.343967</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>27.0</td>\n","      <td>0.463144</td>\n","      <td>1.539436</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8b580ab1-52bf-4ad1-83fb-e8731f9c2f0e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8b580ab1-52bf-4ad1-83fb-e8731f9c2f0e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8b580ab1-52bf-4ad1-83fb-e8731f9c2f0e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","source":["You can just analyze the output above, but when you are working with many groups, it can be helpful to use Pandas to keep you organized and ensure you don't miss anything."],"metadata":{"id":"ZCgAasGocbi8"}},{"cell_type":"code","source":["### checking sig with pandas \n","norm_results_df['sig'] = norm_results_df['p'] < .05 \n","norm_results_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"ZIp909zWcRk-","executionInfo":{"status":"ok","timestamp":1683903075885,"user_tz":240,"elapsed":252,"user":{"displayName":"Luz Dobbins","userId":"15497251191654654554"}},"outputId":"2608e575-c8af-44f3-9ab0-c4e00131a7ec"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      n         p  test stat    sig\n","1  26.0  0.216027   3.064706  False\n","2  27.0  0.841993   0.343967  False\n","3  27.0  0.463144   1.539436  False"],"text/html":["\n","  <div id=\"df-41086758-14d2-4bcd-b099-627372f71d6e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>n</th>\n","      <th>p</th>\n","      <th>test stat</th>\n","      <th>sig</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>26.0</td>\n","      <td>0.216027</td>\n","      <td>3.064706</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>27.0</td>\n","      <td>0.841993</td>\n","      <td>0.343967</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>27.0</td>\n","      <td>0.463144</td>\n","      <td>1.539436</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-41086758-14d2-4bcd-b099-627372f71d6e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-41086758-14d2-4bcd-b099-627372f71d6e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-41086758-14d2-4bcd-b099-627372f71d6e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["We confirm that each group has a normal distribution.\n","\n","\n","\n","## Testing Assumption of Equal Variance\n","\n","Note: the * operator is a convenient way to unpack all of the values in an iterable (lists, dictionaries, etc) as separate variables.\n","By using *groups.values() below, we are saving ourselves from having to manually provide each group separately.\n","\n","Example:"],"metadata":{"id":"wd13SF7rcfUJ"}},{"cell_type":"code","source":["# not using * operator, entering each group manually\n","stats.levene(groups[1],\n","            groups[2],\n","            groups[3])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GZA6rFi2cdK7","executionInfo":{"status":"ok","timestamp":1683903096467,"user_tz":240,"elapsed":245,"user":{"displayName":"Luz Dobbins","userId":"15497251191654654554"}},"outputId":"144e1d54-5ab9-4460-93c6-6d40002be4c0"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LeveneResult(statistic=0.30650755802082735, pvalue=0.7369067613743494)"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["OR"],"metadata":{"id":"u6XgBcNfclQ4"}},{"cell_type":"code","source":["# with the * operator \n","stats.levene(*groups.values())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kmn7O97jciQ3","executionInfo":{"status":"ok","timestamp":1683903111364,"user_tz":240,"elapsed":4,"user":{"displayName":"Luz Dobbins","userId":"15497251191654654554"}},"outputId":"3609d28a-6dd0-46dc-b7ba-0f075c92e8b6"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LeveneResult(statistic=0.30650755802082735, pvalue=0.7369067613743494)"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["We met the assumption of equal variance.\n","\n","# One-Way ANOVA Test\n","Now that we have checked the assumptions, we will perform the test."],"metadata":{"id":"mp4jsij6cnyJ"}},{"cell_type":"code","source":["# perform the correct hypothesis test\n","# note again the use of the * operator for convenience\n","result = stats.f_oneway( *groups.values())\n","result"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fp5Flx4pcl6F","executionInfo":{"status":"ok","timestamp":1683903140142,"user_tz":240,"elapsed":246,"user":{"displayName":"Luz Dobbins","userId":"15497251191654654554"}},"outputId":"3697e019-7038-4eca-bd51-062f2e53e4ad"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["F_onewayResult(statistic=5.679765022955312, pvalue=0.005001924377430895)"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["Oohh..a significant result! But...WHICH diets were different??\n","\n","An ANOVA returns a single p-value to represent the differences between ALL groups. Now that we KNOW we have significant differences, we are allowed to perform pairwise comparisons between every group.\n","We will not use an ordinary t-test for this, instead, we will use a test that is specifically designed to adjust each pair's p-values so that we are less likely to make a Type I error.\n","## Tukey's Pairwise Multiple Comparisons Test\n","Tukey's test will compare every group against every other group and return a p-value for every possible combination of groups.\n","\n","This is the only test that we will be using that is not available in scipy.\n","Instead, we will import pairwise_tukeyhsd from statsmodels"],"metadata":{"id":"BDGS0eMNcup2"}},{"cell_type":"code","source":["from statsmodels.stats.multicomp import pairwise_tukeyhsd\n","## save the values as kg_lost and the labels to the Diet\n","values = df['kg_lost']\n","labels = df['Diet']"],"metadata":{"id":"by_3I5XRcs4w","executionInfo":{"status":"ok","timestamp":1683903222873,"user_tz":240,"elapsed":233,"user":{"displayName":"Luz Dobbins","userId":"15497251191654654554"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["## perform tukey's multiple comparison test and display the summary\n","tukeys_results = pairwise_tukeyhsd(values,labels)\n","tukeys_results.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":139},"id":"QYVP1iPZdBHW","executionInfo":{"status":"ok","timestamp":1683903230381,"user_tz":240,"elapsed":2405,"user":{"displayName":"Luz Dobbins","userId":"15497251191654654554"}},"outputId":"01284125-842a-4ff7-beec-5382aa3214ba"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<class 'statsmodels.iolib.table.SimpleTable'>"],"text/html":["<table class=\"simpletable\">\n","<caption>Multiple Comparison of Means - Tukey HSD, FWER=0.05</caption>\n","<tr>\n","  <th>group1</th> <th>group2</th> <th>meandiff</th>  <th>p-adj</th>  <th>lower</th>   <th>upper</th> <th>reject</th>\n","</tr>\n","<tr>\n","     <td>1</td>      <td>2</td>    <td>-0.5125</td> <td>0.7204</td> <td>-2.0964</td> <td>1.0713</td>  <td>False</td>\n","</tr>\n","<tr>\n","     <td>1</td>      <td>3</td>    <td>1.6097</td>  <td>0.0455</td> <td>0.0259</td>  <td>3.1935</td>  <td>True</td> \n","</tr>\n","<tr>\n","     <td>2</td>      <td>3</td>    <td>2.1222</td>  <td>0.0051</td> <td>0.5534</td>   <td>3.691</td>  <td>True</td> \n","</tr>\n","</table>"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["You can see in the summary above that there are 2 significant results.  We see that there is a significant difference in weight loss between diet 1 and 3 and between diet 2 and 3.  There is no difference between 1 and 2.\n","\n","Note, that this example only includes 3 groups to compare, but this summary would be much longer as the number of groups to compare increases since every pairwise combination is tested!\n","\n","In conclusion, our test showed that there is a significant difference in the results of diet 3 compared to the other two diets.  The amount of kilograms lost was significantly higher for those who were on diet 3."],"metadata":{"id":"S5d6FYV-dHJh"}}]}